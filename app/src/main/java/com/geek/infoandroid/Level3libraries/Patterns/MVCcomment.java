package com.geek.infoandroid.Level3libraries.Patterns;
//самый старый паттерн 1978 год
public class MVCcomment {
/*//СУТЬ ПАТТЕРНА ЧТО МОДЕЛЬ ОТДЕЛЕНА И МОГА ТЕСТИРОВАТЬСЯ НЕ ЗАВИСИМО ОТ ПОЛЬЗОВАТЕЛЬСКОГО ИНТЕРФЕЙСА
    1)Model - работа с бизнес логикой проэкта, с сетью ,бд , локальными хранилищами и тд
[M] 2)View - пользовательский интерфейс(визуализация наших вьюх на экране с использоваанием данных из модели
[M] 3)Controller - получаем уведомления о поведении пользователя и обновляет модель по мере необходимости(нажатия и события от пользователя)
    */

//MVC PASSIVE(Излишняя взаимосвязь,не очень удобно)
    //1)Controller обновляет Model и View,2) View берет данные у Model,3) Model сама по себе

//MVC ACTIVE(тоже неочень оказался)
    //Observer - для подписки на действия,когда они произойдут ,мы получим уведомление
    //наша Activity - Controller  , Activity.xml - View , Model обстрогирована
  //1)View - зависит и от Controller и от Model(сильно снижает гибкость)2)Сontroller -зависит и от View и от Model
 }
